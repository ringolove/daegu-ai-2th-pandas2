# -*- coding: utf-8 -*-
"""판다스와 통계기초.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w65SDK9g_-WOgZsySoOKd8VDvd36DTtv

# 통계 기초

##평균
"""

list(range(10))

import random

sales = [random.randint(1,10) for i in range(10)]
sales

mean = sum(sales)/len(sales)
mean

import pandas as pd
df = pd.DataFrame(sales,columns=['sales'])
df

df.mean()

"""##표준 편차"""

import random
sales = [random.randint(1,10) for i in range(10)]
sales

mean = sum(sales)/len(sales)
mean

deviations = [round(s-mean,2) for s in sales]
deviations

import math
분산 = sum([d**2 for d in deviations])/len(deviations)
표준편차 = math.sqrt(분산)
print(분산, 표준편차)

# 0 - 남성, 1 - 여성
genders = [0, 0, 0, 1, 1, 1, 1, 1, 1, 1]
sum(genders)/len(genders)

import pandas as pd
df = pd.DataFrame(sales,columns = ['sales'])
df

df['sales'].std()

"""##중앙값"""

import random

sales = [random.randint(1,10) for i in range(10)]
sales.sort()
print(sales)

# // - 몫을 구하는 연산자
n = len(sales)//2

if len(sales)%2 == 0:
  print(sum(sales[n-1:n+1])/2)
else:
  print(sales[n])

import pandas as pd
df = pd.DataFrame(sales,columns = ['sales'])
df['sales'].median()

"""##사분위수"""

import random

sales = [random.randint(1,100) for i in range(16)]
sales.sort()
print(sales)

# n = (len(sales)//4)
# print('count',n)
# print(f'{sales[n]}, {sales[2*n]}, {sales[3*n]}') 잘못된 코드

import pandas as pd

df = pd.DataFrame(sales, columns = ['sales'])
df

df['sales'].quantile([0,.25,.5,.75,1])

df.describe()

"""## 연습. 누구를 기용할 것인가?"""

players = {
    'p1': [7,9,9,10,10,10,10,10,11,11,13],
    'p2': [7,8,9,9,10,10,10,11,11,12,13],
    'p3': [3,3,6,7,7,10,10,10,11,13,30]
}

import pandas as pd

df = pd.DataFrame(players)
df

df.describe()

"""##list comprehension"""

numbers = list(range(10))
numbers

evens = [n for n in numbers if n%2 == 0]
print(evens)

evens = []
for n in numbers:
  if n%2 == 0:
    evens.append(n)
print(evens)

odds = [n for n in numbers if n%2 != 0]
print(odds)

squre_evens = [n**2 for n in numbers if n%2 == 0]
print(squre_evens)

"""##slicing - 부분집합 꺼내기"""

numbers[-3:]

"""##2일차: 최빈값"""

fruit = ['배','배','배','배','사과','사과','귤','귤','귤']
set(fruit)

fruit_count = dict([(s,fruit.count(s)) for s in set(fruit)])
fruit_count

import pandas as pd

df = pd.DataFrame(fruit, columns=['fruit'])
df

df['fruit'].value_counts()

df['fruit'].value_counts(normalize=True)

"""#판다스 기초

##데이터 불러오기/파악하기
"""

import pandas as pd
path = 'https://raw.githubusercontent.com/blackdew/ml-tensorflow/master/data/csv/lemonade.csv'
df = pd.read_csv(path)

print(df.shape)
df.info()

df.head(2)

df.tail(2)

df.columns

"""* 보스턴 집값 데이터"""

import pandas as pd
path = 'https://raw.githubusercontent.com/blackdew/ml-tensorflow/master/data/csv/boston.csv'
df = pd.read_csv(path)

print(df.shape)
df.info()

df.head(2)

df.tail(2)

df.columns

"""* 아이리스 품종 데이터"""

import pandas as pd
path = 'https://raw.githubusercontent.com/blackdew/ml-tensorflow/master/data/csv/iris.csv'
df = pd.read_csv(path)

print(df.shape)
df.info()

df.head(2)

df.tail(2)

df.columns

"""##Row/Column 선택하기"""

import pandas as pd
path = 'https://raw.githubusercontent.com/blackdew/ml-tensorflow/master/data/csv/lemonade.csv'
df = pd.read_csv(path)

print(df['온도'].shape)
df['온도'] #시리즈 하나만 꺼낼 수 있음

print(df[['온도']].shape)
df[['온도']] #데이터프레임

df[['온도','판매량']] #칼럼을 리스트로 만들어 한꺼번에 추출

df.iloc[0:3] #슬라이싱 위치값으로 추출 순서대로 꺼냄 중요함

df.loc[0:3] #key값으로 추출

df.iloc[3,1]

df.iloc[2:4,:] #칼럼을 슬라이싱해서 전체 출력

df_sorted = df.sort_values(by=['판매량'],ascending=False)
df_sorted.head()

df_sorted.iloc[0]

df_sorted.loc[0]

"""##원하는 데이터 찾기 - Query/Search"""

(df['온도']>23) #결과값 시리즈

df[(df['온도']>23)] #시리즈된 결과값을 데이터프레임화 = True값만 가져옴

df[(df['온도']>23) | (df['판매량'] == 40)] # | or / & and

d = {'col1': ['Item0', 'Item0', 'Item1', 'Item1'],
     'col2': ['Gold', 'Bronze', 'Gold', 'Silver']}
df1 = pd.DataFrame(d)
df1

df1['col2'].str.contains('o')

df1[df1.col2.str.contains('o')]

"""##실습

###1. chas가 1인 데이터 중에 가장 비싼 집을 찾아봅시다.
"""

import pandas as pd
path = 'https://raw.githubusercontent.com/blackdew/ml-tensorflow/master/data/csv/boston.csv'
df = pd.read_csv(path)
df.head()

df_selected = df[(df['chas'] == 1)]
df_selected.head()

df_selected.sort_values(by='medv', ascending=False).head()

"""###2. 품종별로 꽃잎 폭이 가장 큰 행을 찾아 비교해 봅시다."""

import pandas as pd
path = 'https://raw.githubusercontent.com/blackdew/ml-tensorflow/master/data/csv/iris.csv'
df = pd.read_csv(path)
df.head()

df['품종'].value_counts()

df_selected = df[(df['품종'] == 'setosa')]
df_selected.sort_values(by=['꽃잎폭'], ascending=False).head(1)

df_selected = df[(df['품종'] == 'virginica')]
df_selected.sort_values(by=['꽃잎폭'], ascending=False).head(1)

df_selected = df[(df['품종'] == 'versicolor')]
df_selected.sort_values(by=['꽃잎폭'], ascending=False).head(1)

path = "/content/sample_data/california_housing_test.csv"
df = pd.read_csv(path)
print(df.shape)
df.head()

"""#KRX 증권 데이터"""

#라이브러리 설치 시 맨 앞에 !를 붙여야 실행됨
!pip install finance-datareader

import FinanceDataReader as fdr

# 삼성전자(005930) 전체 (1996-11-05 ~ 현재)
df = fdr.DataReader('005930')
print(df.shape)
df.info()

df.head()

df.tail()

# Apple(AAPL), 2017-01-01 ~ Now
df = fdr.DataReader('AAPL', '2017')
df.tail()

